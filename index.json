{
  "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html",
    "title": "Class RecycleItemsView",
    "keywords": "Class RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate Inheritance System.Object RecycleItemsView Implements IRecycleItemsViewController Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RecycleItemsView : ContentView, IRecycleItemsViewController Constructors RecycleItemsView() Creates and initializes a new instance of the RecycleItemsView class. Declaration public RecycleItemsView() Fields ColumnCountProperty Backing store for the ColumnCount property. Declaration public static readonly BindableProperty ColumnCountProperty Field Value Type Description BindableProperty ContentMarginProperty Backing store for the ContentMargin property. Declaration public static readonly BindableProperty ContentMarginProperty Field Value Type Description BindableProperty FocusedItemProperty Backing store for the FocusedItem property. Declaration public static readonly BindableProperty FocusedItemProperty Field Value Type Description BindableProperty FooterProperty Backing store for the Footer property. Declaration public static readonly BindableProperty FooterProperty Field Value Type Description BindableProperty FooterTemplateProperty Backing store for the FooterTemplate property. Declaration public static readonly BindableProperty FooterTemplateProperty Field Value Type Description BindableProperty HeaderProperty Backing store for the Header property. Declaration public static readonly BindableProperty HeaderProperty Field Value Type Description BindableProperty HeaderTemplateProperty Backing store for the HeaderTemplate property. Declaration public static readonly BindableProperty HeaderTemplateProperty Field Value Type Description BindableProperty ItemHeightProperty Backing store for the ItemHeight property. Declaration public static readonly BindableProperty ItemHeightProperty Field Value Type Description BindableProperty ItemsSourceProperty Backing store for the ItemsSource property. Declaration public static readonly BindableProperty ItemsSourceProperty Field Value Type Description BindableProperty ItemTemplateProperty Backing store for the ItemTemplate property. Declaration public static readonly BindableProperty ItemTemplateProperty Field Value Type Description BindableProperty ItemWidthProperty Backing store for the ItemWidth property. Declaration public static readonly BindableProperty ItemWidthProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty ScrollBarVisibilityProperty Backing store for the ScrollBarVisibility property. Declaration public static readonly BindableProperty ScrollBarVisibilityProperty Field Value Type Description BindableProperty ScrollPolicyProperty Backing store for the ScrollPolicy property. Declaration public static readonly BindableProperty ScrollPolicyProperty Field Value Type Description BindableProperty SelectedItemProperty Backing store for the SelectedItem property. Declaration public static readonly BindableProperty SelectedItemProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the Spacing property. Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty Properties ColumnCount Gets or sets the count of columns. Declaration public int ColumnCount { get; set; } Property Value Type Description System.Int32 ContentMargin Gets or sets the margin for the content. Declaration public Thickness ContentMargin { get; set; } Property Value Type Description Thickness FocusedItem Gets or sets the currently focused item from the ItemsSource. Declaration public object FocusedItem { get; set; } Property Value Type Description System.Object Footer Gets or sets the binding, or view that will be displayed at the last of the items. Declaration public object Footer { get; set; } Property Value Type Description System.Object FooterElement Gets instantiated Footer view Declaration public View FooterElement { get; protected set; } Property Value Type Description View FooterTemplate Gets or sets a data template to use to format a data object for display Footer. Declaration public DataTemplate FooterTemplate { get; set; } Property Value Type Description DataTemplate Header Gets or sets the binding, or view that will be displayed at the first of the items. Declaration public object Header { get; set; } Property Value Type Description System.Object HeaderElement Gets instantiated Header view Declaration public View HeaderElement { get; protected set; } Property Value Type Description View HeaderTemplate Gets or sets a data template to use to format a data object for display Header. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate ItemHeight Gets or sets a value that represents the height of an item. Declaration public double ItemHeight { get; set; } Property Value Type Description System.Double ItemsSource Gets or sets the source of items to template and display. Declaration public IEnumerable ItemsSource { get; set; } Property Value Type Description IEnumerable ItemTemplate Gets or sets the DataTemplate to apply to the ItemsSource. Declaration public DataTemplate ItemTemplate { get; set; } Property Value Type Description DataTemplate ItemWidth Gets or sets a value that represents the width of an item. Declaration public double ItemWidth { get; set; } Property Value Type Description System.Double Orientation Gets or sets the value which indicates the direction which items are positioned. Declaration public RecycleItemsViewOrientation Orientation { get; set; } Property Value Type Description RecycleItemsViewOrientation RedundantItemCount declare the number of items to make redundant. Declaration protected virtual int RedundantItemCount { get; } Property Value Type Description System.Int32 ScrollBarVisibility Gets or sets the scroll bar visibility. Declaration public ScrollBarVisibility ScrollBarVisibility { get; set; } Property Value Type Description ScrollBarVisibility ScrollPolicy Gets or sets the scroll position policy. Declaration public ScrollToPosition ScrollPolicy { get; set; } Property Value Type Description ScrollToPosition ScrollView Gets the ScrollView internally created. Declaration protected ScrollView ScrollView { get; } Property Value Type Description ScrollView SelectedItem Gets or sets the currently selected item from the ItemsSource. Declaration public object SelectedItem { get; set; } Property Value Type Description System.Object Spacing Gets or sets a value which indicates the amount of space between each item. Declaration public double Spacing { get; set; } Property Value Type Description System.Double Methods CreateScrollView() Create a ScrollView that used in RecycleItemsView. Declaration protected virtual ScrollView CreateScrollView() Returns Type Description ScrollView ScrollView InitializeComponent() Declaration protected void InitializeComponent() LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnItemFocused(Object, View, Boolean) Called when Item is focused Declaration protected virtual void OnItemFocused(object data, View targetView, bool isFocused) Parameters Type Name Description System.Object data The focused item from the ItemsSource. View targetView Instantiated View System.Boolean isFocused Whether or not focused OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest ScrollToAsync(Double, Double, Boolean) Returns a task that scrolls the scroll view to a position asynchronously. Declaration public Task ScrollToAsync(double x, double y, bool animation) Parameters Type Name Description System.Double x The X position of the finished scroll. System.Double y The Y position of the finished scroll. System.Boolean animation Whether or not to animate the scroll. Returns Type Description Task Task ScrollToAsync(Object, ScrollToPosition, Boolean) Returns a task that scrolls the scroll view to an item asynchronously. Declaration public Task ScrollToAsync(object item, ScrollToPosition position, bool animation) Parameters Type Name Description System.Object item The item to scroll. ScrollToPosition position The scroll position. System.Boolean animation Whether or not to animate the scroll. Returns Type Description Task Task Events ItemRealized Event that is raised when a item's view is attached the RecycleItemsView. Declaration public event EventHandler<ItemRealizedEventArgs> ItemRealized Event Type Type Description EventHandler < ItemRealizedEventArgs > ItemSelected Event that is raised when a new item is selected. Declaration public event EventHandler<SelectedItemChangedEventArgs> ItemSelected Event Type Type Description EventHandler < SelectedItemChangedEventArgs > ItemUnrealized Event that is raised when a item's view is detached the RecycleItemsView. Declaration public event EventHandler<ItemUnrealizedEventArgs> ItemUnrealized Event Type Type Description EventHandler < ItemUnrealizedEventArgs > Explicit Interface Implementations IRecycleItemsViewController.FocusedView Declaration View IRecycleItemsViewController.FocusedView { get; } Returns Type Description View IRecycleItemsViewController.ScrollBounds Declaration Rectangle IRecycleItemsViewController.ScrollBounds { get; } Returns Type Description Rectangle IRecycleItemsViewController.SendKeyDown(String) Declaration bool IRecycleItemsViewController.SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean Implements IRecycleItemsViewController"
  },
  "api/Tizen.TV.UIControls.Forms.InputEvents.html": {
    "href": "api/Tizen.TV.UIControls.Forms.InputEvents.html",
    "title": "Class InputEvents",
    "keywords": "Class InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. Inheritance System.Object InputEvents Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class InputEvents : object Fields AccessKeyProperty Identifies the access key that is set to the object at run time. Declaration public static readonly BindableProperty AccessKeyProperty Field Value Type Description BindableProperty EventHandlersProperty Implements the attached property that is a collection of RemoteKeyHandler s. Declaration public static readonly BindableProperty EventHandlersProperty Field Value Type Description BindableProperty EventHandlersPropertyKey Declaration public static readonly BindablePropertyKey EventHandlersPropertyKey Field Value Type Description BindablePropertyKey Methods GetAccessKey(BindableObject) Returns the access key that is set to the view. Declaration public static RemoteControlKeyNames GetAccessKey(BindableObject view) Parameters Type Name Description BindableObject view The view to get the access key. Returns Type Description RemoteControlKeyNames Returns the remote contol key name. GetEventHandlers(BindableObject) Returns a collection of the RemoteKeyHandler for the specified view . Developers can add or remove RemoteKeyHandlers to this collection. Declaration public static IList<RemoteKeyHandler> GetEventHandlers(BindableObject view) Parameters Type Name Description BindableObject view The view to get a collection of the RemoteKeyHandler s. Returns Type Description IList < RemoteKeyHandler > Returns a collection of the RemoteKeyHandler s SetAccessKey(BindableObject, RemoteControlKeyNames) Sets the access key to the specified view. When the access key is pressed, the specified view will directly get the focus and also be clicked if it is the Button. Declaration public static void SetAccessKey(BindableObject view, RemoteControlKeyNames value) Parameters Type Name Description BindableObject view The view to be set. RemoteControlKeyNames value The remote control key name to be set to the view."
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSource.html",
    "title": "Class FileMediaSource",
    "keywords": "Class FileMediaSource A MediaSource that reads a media from a file. Inheritance System.Object MediaSource FileMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSource : MediaSource Fields FileProperty Identifies the File bindable property. Declaration public static readonly BindableProperty FileProperty Field Value Type Description BindableProperty Properties File Gets or sets the file from which this FileMediaSource will load a media. Declaration public string File { get; set; } Property Value Type Description System.String Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Declaration public override string ToString() Returns Type Description System.String Operators Implicit(String to FileMediaSource) Allows implicit casting from a string. Declaration public static implicit operator FileMediaSource(string file) Parameters Type Name Description System.String file Returns Type Description FileMediaSource Implicit(FileMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (FileMediaSource file) Parameters Type Name Description FileMediaSource file Returns Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html",
    "title": "Class BufferingProgressUpdatedEventArgs",
    "keywords": "Class BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. Inheritance System.Object BufferingProgressUpdatedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class BufferingProgressUpdatedEventArgs : EventArgs Properties Progress The value indicating the buffering status(0-1). Declaration public double Progress { get; set; } Property Value Type Description System.Double"
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html",
    "title": "Class FileMediaSourceConverter",
    "keywords": "Class FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. Inheritance System.Object FileMediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Creates a file media source given a path to a media. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object FileMediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.MediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaView.html",
    "title": "Class MediaView",
    "keywords": "Class MediaView The MediaView class is used to display the video output on the screen. Inheritance System.Object MediaView OverlayMediaView Implements IVideoOutput Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class MediaView : Layout<View>, IVideoOutput Fields PlayerProperty Identifies the Player bindable property. Declaration public static readonly BindableProperty PlayerProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public virtual VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType Player Gets or sets the media player. Declaration public MediaPlayer Player { get; set; } Property Value Type Description MediaPlayer Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest Explicit Interface Implementations IVideoOutput.Controller Declaration View IVideoOutput.Controller { get; set; } Returns Type Description View IVideoOutput.MediaView Declaration VisualElement IVideoOutput.MediaView { get; } Returns Type Description VisualElement Implements IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html",
    "title": "Interface IRecycleItemsViewController",
    "keywords": "Interface IRecycleItemsViewController This interface is for internal use. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IRecycleItemsViewController Properties FocusedView Declaration View FocusedView { get; } Property Value Type Description View ScrollBounds Declaration Rectangle ScrollBounds { get; } Property Value Type Description Rectangle Methods SendKeyDown(String) Declaration bool SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html",
    "title": "Enum RemoteControlKeyNames",
    "keywords": "Enum RemoteControlKeyNames Enumeration that specifies the remote control key names. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RemoteControlKeyNames : int Fields Name Description Back Back. Blue Blue. ChannelGuide Channel guide. Down Down. Exit Exit. Green Green. Info Information. Left Left. LowerChannel Lower channel. LowerVolume Lower volume. Minus Minus. Mute Mute. Next Next. NextChapter Next Chapter. NUM0 0 NUM1 1 NUM2 2 NUM3 3 NUM4 4 NUM5 5 NUM6 6 NUM7 7 NUM8 8 NUM9 9 Pause Pause. Play Play. PlayBack Playback. PreviousChannel Previous channel. PreviousChapter Previous chapter. RaiseChannel Raise channel. RaiseVolume Raise volume. Record Record. Red Red. Return Return. Rewind Rewind. Right Right. SimpleMenu Simple menu. Stop Stop. Unknown An undefined key name. Up Up. Yellow Yellow."
  },
  "guides/RecycleItemsView_CustomEffect.html": {
    "href": "guides/RecycleItemsView_CustomEffect.html",
    "title": "Focus with header footer",
    "keywords": "RecycleItemsView provides a default focusing effect that is scaling to 1.2. If you want to change this behavior, you need to inherit RecycleItemsView and override OnItemFocused method. protected virtual void OnItemFocused(object data, View targetView, bool isFocused); When you need to apply the focusing effect, we call this method with the focused view. data is a FocusedItem in ItemsSource targetView is a realized view that is created by ItemTemplate isFocused is about whether focus or not. You need to implement Focused and Unfocused cases. If not, all views will be shown as focused. Focus with header footer Header/Footer also can get a focus and triggered OnItemFocused when focused. Therefore, if you want to know if a focused view is the header or not, compare the data parameter with Header property. Custom Fouse Effect example <local:MyRecycleItemsView ...> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <AbsoluteLayout> <Image Source=\"{Binding Source}\" Aspect=\"Fill\" AbsoluteLayout.LayoutBounds=\"0, 0, 1, 1\" AbsoluteLayout.LayoutFlags=\"All\"/> <StackLayout Padding=\"20\" BackgroundColor=\"#aa000000\" AbsoluteLayout.LayoutBounds=\"0, 1, 480, 100\" AbsoluteLayout.LayoutFlags=\"PositionProportional\"> <Label Text=\"{Binding Text}\" TextColor=\"AntiqueWhite\" FontSize=\"70\" FontAttributes=\"Bold\" /> <Label Text=\"{Binding DetailText}\" FontSize=\"40\"/> </StackLayout> </AbsoluteLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </local:MyRecycleItemsView> protected override void OnItemFocused(object data, View targetView, bool isFocused) { AbsoluteLayout layout = (AbsoluteLayout)targetView; View textarea = layout.Children[1]; if (isFocused) { targetView.ScaleTo(1.2); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 100 + rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } else { targetView.ScaleTo(1.0); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 200 - rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } } When the Item is focused, text area will grow up to 200px. We are able to know a type of View, because it was created by ItemTemplate . So, we can get a StackLayout object and make it larger."
  },
  "guides/InputEvents.html": {
    "href": "guides/InputEvents.html",
    "title": "InputEvents",
    "keywords": "InputEvents InputEvents helps developers to handle the remote control events that are emitted from TV devices. The RemoteKeyHandler which contains a Command and key events can be added to a collection of handlers. The access key can be set to a specific view and the view gets a direct focus when the key is pressed. When the view is a Button , Clicked event occurs also. How to add RemoteKeyHandler Get a collection of handlers using GetEventHandlers(BindableObject view) , and add RemoteKeyHandler to it. xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1\"> <uicontrols:InputEvents.EventHandlers> <uicontrols:RemoteKeyHandler Command=\"{Binding ButtonHandler, Source={x:Reference rootPage}}\"/> </uicontrols:InputEvents.EventHandlers> </Button> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { public TestRemoteControl() { Button button1 = new Button { Text = \"Button1\" }; RemoteKeyHandler buttonHandler = new RemoteKeyHandler(new Action<RemoteControlKeyEventArgs>((arg) => { button1.Text = $\"Button1 : {arg.KeyType} {arg.KeyName} {arg.PlatformKeyName}\"; })); InputEvents.GetEventHandlers(button1).Add(buttonHandler); Content = new StackLayout { Children = { button1, } }; } } How to set an access key xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1 (accesskey 1)\" uicontrols:InputEvents.AccessKey=\"NUM1\" Clicked=\"OnClicked\" /> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { int _clickedTimes = 0; public TestRemoteControl() { Button button1 = new Button { Text = \"Button2 (Accesskey 1)\" }; button1.Clicked += (s, e) => { button1.Text = $\"Button1 (Accesskey 1): {++_clickedTimes} clicked\"; }; InputEvents.SetAccessKey(button1, RemoteControlKeyNames.NUM1); Content = new StackLayout { Children = { button1, } }; } }"
  },
  "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html",
    "title": "Class ItemUnrealizedEventArgs",
    "keywords": "Class ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. Inheritance System.Object ItemUnrealizedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemUnrealizedEventArgs : EventArgs Properties Item The detached item. Declaration public object Item { get; set; } Property Value Type Description System.Object UnrealizedView The detached view. Declaration public View UnrealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html",
    "title": "Enum RecycleItemsViewOrientation",
    "keywords": "Enum RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RecycleItemsViewOrientation : int Fields Name Description Horizontal RecycleItemsView should be horizontally oriented. Vertical should be vertically oriented."
  },
  "api/Tizen.TV.UIControls.Forms.MediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaPlayer.html",
    "title": "Class MediaPlayer",
    "keywords": "Class MediaPlayer MediaPlayer provieds the essential components to play the media contents. Inheritance System.Object MediaPlayer Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class MediaPlayer : Element Constructors MediaPlayer() Initializes a new instance of the MediaPlayer class. Declaration public MediaPlayer() Fields AspectModeProperty Identifies the AspectMode bindable property. Declaration public static readonly BindableProperty AspectModeProperty Field Value Type Description BindableProperty AutoPlayProperty Identifies the AutoPlay bindable property. Declaration public static readonly BindableProperty AutoPlayProperty Field Value Type Description BindableProperty AutoStopProperty Identifies the AutoStop bindable property. Declaration public static readonly BindableProperty AutoStopProperty Field Value Type Description BindableProperty BufferingProgressProperty Identifies the BufferingProgress bindable property. Declaration public static readonly BindableProperty BufferingProgressProperty Field Value Type Description BindableProperty DurationProperty Identifies the Duration bindable property. Declaration public static readonly BindableProperty DurationProperty Field Value Type Description BindableProperty IsBufferingProperty Identifies the IsBuffering bindable property. Declaration public static readonly BindableProperty IsBufferingProperty Field Value Type Description BindableProperty IsMutedProperty Identifies the IsMuted bindable property. Declaration public static readonly BindableProperty IsMutedProperty Field Value Type Description BindableProperty PositionProperty Identifies the Position bindable property. Declaration public static readonly BindableProperty PositionProperty Field Value Type Description BindableProperty PositionUpdateIntervalProperty Identifies the PositionUpdateInterval bindable property. Declaration public static readonly BindableProperty PositionUpdateIntervalProperty Field Value Type Description BindableProperty SourceProperty Identifies the Source bindable property. Declaration public static readonly BindableProperty SourceProperty Field Value Type Description BindableProperty StateProperty Identifies the State bindable property. Declaration public static readonly BindableProperty StateProperty Field Value Type Description BindableProperty UsesEmbeddingControlsProperty Identifies the UsesEmbeddingControls bindable property. Declaration public static readonly BindableProperty UsesEmbeddingControlsProperty Field Value Type Description BindableProperty VideoOutputProperty Identifies the VideoOutput bindable property. Declaration public static readonly BindableProperty VideoOutputProperty Field Value Type Description BindableProperty VolumeProperty Identifies the Volume bindable property. Declaration public static readonly BindableProperty VolumeProperty Field Value Type Description BindableProperty Properties AspectMode Gets or sets the scaling mode for the media content. Declaration public DisplayAspectMode AspectMode { get; set; } Property Value Type Description DisplayAspectMode AutoPlay Gets or sets a value whether the media content plays automatically. Declaration public bool AutoPlay { get; set; } Property Value Type Description System.Boolean AutoStop Gets or sets a value whether the media content stops automatically. Declaration public bool AutoStop { get; set; } Property Value Type Description System.Boolean BufferingProgress Gets the value indicating the buffering percentage. Declaration public double BufferingProgress { get; } Property Value Type Description System.Double Duration Gets the duration of a media content. Declaration public int Duration { get; } Property Value Type Description System.Int32 FastForwardCommand For internal use. Declaration public Command FastForwardCommand { get; } Property Value Type Description Command IsBuffering Gets a value indicating the buffering status. Declaration public bool IsBuffering { get; } Property Value Type Description System.Boolean IsMuted Gets or sets the value whether the volume is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean Position Gets the value of the current position of the media content. Declaration public int Position { get; } Property Value Type Description System.Int32 PositionUpdateInterval Gets or sets the desired interval time for updating position. Declaration public int PositionUpdateInterval { get; set; } Property Value Type Description System.Int32 Progress For internal use. Declaration public double Progress { get; } Property Value Type Description System.Double RewindCommand For internal use. Declaration public Command RewindCommand { get; } Property Value Type Description Command Source Gets or sets the source of the media content. Declaration public MediaSource Source { get; set; } Property Value Type Description MediaSource StartCommand For internal use. Declaration public Command StartCommand { get; } Property Value Type Description Command State Gets the current playback state. Declaration public PlaybackState State { get; } Property Value Type Description PlaybackState UsesEmbeddingControls Gets or sets whether to use the embedding controls. Declaration public bool UsesEmbeddingControls { get; set; } Property Value Type Description System.Boolean VideoOutput Gets or sets the video output. Declaration public IVideoOutput VideoOutput { get; set; } Property Value Type Description IVideoOutput Volume Gets or sets the current volume of a media content. Declaration public double Volume { get; set; } Property Value Type Description System.Double Methods GetAlbumArts() Retrieves the album art of the stream, or null if there is no album art data. Declaration public Task<Stream> GetAlbumArts() Returns Type Description Task < Stream > Returns a Task that gets the album art of the stream GetMetadata() Gets the metadata of the media content. Declaration public Task<IDictionary<string, string>> GetMetadata() Returns Type Description Task < IDictionary < System.String , System.String >> Returns a Task that has the metadata of the media content. Pause() Pauses the player. Declaration public void Pause() Seek(Int32) Attemps to seek the playback position. Declaration public Task<int> Seek(int ms) Parameters Type Name Description System.Int32 ms The milliseconds to seek Returns Type Description Task < System.Int32 > Returns a Task that seeks the play position. Start() Starts or resumes playback. Declaration public Task<bool> Start() Returns Type Description Task < System.Boolean > Returns a Task that prepares the player and play the media content. Stop() Stops playing the media content. Declaration public void Stop() Events BufferingCompleted Occurs when the buffering for the media content is completed. Declaration public event EventHandler BufferingCompleted Event Type Type Description EventHandler BufferingStarted Occurs when the buffering for the media content is started. Declaration public event EventHandler BufferingStarted Event Type Type Description EventHandler PlaybackCompleted Occurs when the playback is completed. Declaration public event EventHandler PlaybackCompleted Event Type Type Description EventHandler PlaybackPaused Occurs when the playback is paused. Declaration public event EventHandler PlaybackPaused Event Type Type Description EventHandler PlaybackStarted Occurs when the playback is started. Declaration public event EventHandler PlaybackStarted Event Type Type Description EventHandler PlaybackStopped Occurs when the playback is stopped. Declaration public event EventHandler PlaybackStopped Event Type Type Description EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html",
    "title": "Class ItemRealizedEventArgs",
    "keywords": "Class ItemRealizedEventArgs Event arguments for the ItemRealized event. Inheritance System.Object ItemRealizedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemRealizedEventArgs : EventArgs Properties Item The attached item. Declaration public object Item { get; set; } Property Value Type Description System.Object RealizedView The attached view. Declaration public View RealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.html": {
    "href": "api/Tizen.TV.UIControls.Forms.html",
    "title": "Namespace Tizen.TV.UIControls.Forms",
    "keywords": "Namespace Tizen.TV.UIControls.Forms Classes BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. EmbeddingControls A built-in media controls. FileMediaSource A MediaSource that reads a media from a file. FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. ItemRealizedEventArgs Event arguments for the ItemRealized event. ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. MediaPlayer MediaPlayer provieds the essential components to play the media contents. MediaSource Abstract class whose implementors load media contents from files or the Web. MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. MediaView The MediaView class is used to display the video output on the screen. MillisecondToTextConverter Class that the XAML parser uses to convert milliseconds to Text format. OverlayMediaView An overlay MediaView. OverlayPage The OverlayPage class is used to display the video output on a page. ProgressToBoundTextConverter Class that the XAML parser uses to convert Progress to Bound. RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. UriMediaSource A MediaSource that loads a media from a URI Interfaces IOverlayOutput Interface for defining the overlay type of output. IPlatformMediaPlayer For internal use by platform renderers. IRecycleItemsViewController This interface is for internal use. IVideoOutput Interface indicating the ouput type of the media. Enums DisplayAspectMode Enumerates values that define how a media content is displayed. PlaybackState Enumerates values that define the playback state of the media content. RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. RemoteControlKeyNames Enumeration that specifies the remote control key names. RemoteControlKeyTypes Enumeration that specifies the remote control key types. VideoOuputType Enumeration that specifies the video ouput."
  },
  "guides/MediaPlayer_Converter.html": {
    "href": "guides/MediaPlayer_Converter.html",
    "title": "Problem definition",
    "keywords": "Problem definition MediaPlayer.Position is int value, but Progressbar.Progress is double value (0 to 1.0) Need duration to convert Create a custom Converter Implements Xamarin.Forms.IValueConverter public class PositionToProgressConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { return ((int)value / (double)(GetParameter(parameter))); } public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) { return (int)((double)value * GetParameter(parameter)); } int GetParameter(object parameter) { var duration = ((Tizen.TV.UIControls.Forms.MediaPlayer)parameter).Duration; if (duration == 0) duration = 1; return duration; } } Pass a MediaPlayer instance as the parameter Use custom converter in Xaml .... <ContentPage.Resources> <ResourceDictionary> <local:PositionToProgressConverter x:Key=\"positionToProgress\"/> </ResourceDictionary> </ContentPage.Resources> ... <ProgressBar Progress=\"{Binding Source={x:Reference Player}, Path=Position, Converter={StaticResource positionToProgress}, ConverterParameter={x:Reference Player}}}\"/> ...."
  },
  "index.html": {
    "href": "index.html",
    "title": "Tizen TV UIControls",
    "keywords": "Tizen TV UIControls The Tizen TV UIControls is a set of helpful extensions to the Xamarin Forms framework for the Samsung TV device. The binaries are available via NuGet (package name is \"Tizen.TV.UIControls.Forms\") with the source available here. Major Classes Name Description MediaPlayer Class that provieds the essential components to play the media contents. MediaView Class that is used to display the video output on the screen. OverlayMediaView An overlay MediaView. OverlayPage Class that is used to display the video output on a page. RecycleItemsView ScrollView that efficiently displays a collection of data using DataTemplate. InputEvents Class that helps developers to handle the remote control events that are emitted from TV devices."
  },
  "guides/Overview.html": {
    "href": "guides/Overview.html",
    "title": "Developer Guides",
    "keywords": "Developer Guides Welcome to the developer guides for Tizen TV UI Controls."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Tizen TV UI Controls",
    "keywords": "Tizen TV UI Controls This document is the API Specification for the Tizen TV UIControls. Namespace Description Tizen.TV.UIControls.Forms Provide the classes that help creating Tizen TV applications."
  },
  "guides/MediaPlayer_Introduction.html": {
    "href": "guides/MediaPlayer_Introduction.html",
    "title": "MediaPlayer",
    "keywords": "MediaPlayer Introduction MediaPlayer provides functionality of playing multimedia. It also includes related view components that display video stream. How to use C# var view = new MediaView(); var player = new MediaPlayer(); player.VideoOutput = view; player.Source = \"a.mp4\"; player.Start(); XAML <tvcontrols:MediaView> <tvcontrols:MediaPlayer Source=\"{Binding Source}\" AutoStart=\"true\"/> </tvcontrols:MediaView> PlaybackState MediaPlayer has a PlaybackState. Some APIs only work on the certain state and some APIs transit the state. State diagram of PlaybackState Video output types Overlay It displays video data on the overlay plane. It is more efficient and fast but has a limit shape. Usually it is used to display the video as fullscreen. OverlayPage OverlayMediaView #### Buffer It displays video data on the graphics buffer using GL surface. It is free to change the shape, but if it does not support GL surface, you can't use it. It is usually used to attach a video on a part of the view. MediaView Associating Player with media view MediaPlayer and MediaView are created independently. To display video data into MediaView, the developer needs to associate Player and MediaView. Use VideoOutput property of Player player.VideoOutput = new MediaView(); Use Player property of MediaView <tvcontrols:MediaView> <tvcontrols:MediaView.Player> <tvcontrols:MediaPlayer Source=\"{Binding Source}\"/> </tvcontrols:MediaView.Player> </tvcontrols:MediaView> mediaView.Player = new MediaPlayer(); Embedding controls By default, MediaPlayer provides an embedding control. If you don't want to use the default embedding controls, set UsesEmbeddingControls to false. public bool UsesEmbeddingControls AutoPlay/AutoStop Video can't play before media view is shown, so you need to know when the media views are available. If you use AutoPlay/AutoStop property, you don't need to care about the view state. AutoPlay public bool AutoPlay Automatically starts a player when a View is shown (Rendered). AutoStop public bool AutoStop Automatically stops a player when a View is gone (Renderer was disposed). Related Links Sample"
  },
  "guides/RecycleItemsView_Introduction.html": {
    "href": "guides/RecycleItemsView_Introduction.html",
    "title": "RecycleItemsView",
    "keywords": "RecycleItemsView Introduction RecycleItemsView is a view that takes in a list of user objects and produces views for each of them to be displayed. Especially, it can be used when the data is displayed in the same view template. It reuses the templated view when it is out of sight. Concept How to use C# var recycleView = new RecycleItemsView() { ContentMargin = 60, ItemHeight = 350, ItemWidth = 300, Spacing = 20, ItemsSource = item, ItemTemplate = new DataTemplate(() => { Label label; var view = new StackLayout { Children = { (label = new Label { }) } }; view.SetBinding(StackLayout.BackgroundColorProperty, new Binding(\"Color\")); label.SetBinding(Label.TextProperty, new Binding(\"Label\")); return view; }) }), XAML <tvcontrols:RecycleItemsView ContentMargin=\"60\" ItemWidth=\"300\" ItemHeight=\"350\" Spacing=\"20\" ItemsSource=\"{Binding Items}\"> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <StackLayout BackgroundColor=\"{Binding Color}\"> <Label Text=\"{Binding Text}\"/> </StackLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </tvcontrols:RecycleItemsView> Properties related layouting Item width and height All items in RecycleItemsView have the same width and height, because it should be reused. Multiple columns You can display items on multiple lines. Use ColumnCount property to apply multiple columns. Header and Footer RecycleItemsView displays items with a same DataTemplate . If you want to use special looks for first or last, you can use Header or Footer property. The Header and Footer can be data objects that contain a view model or a view instance. If Header or Footer is a View, it is directly used for displaying header or footer. If not, HeaderTemplate or FooterTemplate is used to make a view that is used for displaying header or footer. Related Links DataTemplate Sample"
  },
  "api/Tizen.TV.UIControls.Forms.UriMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.UriMediaSource.html",
    "title": "Class UriMediaSource",
    "keywords": "Class UriMediaSource A MediaSource that loads a media from a URI Inheritance System.Object MediaSource UriMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class UriMediaSource : MediaSource Fields UriProperty Identifies the File bindable property. Declaration public static readonly BindableProperty UriProperty Field Value Type Description BindableProperty Properties Uri Gets or sets the URI for the media to get. Declaration public Uri Uri { get; set; } Property Value Type Description Uri Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Returns the path to the file for the media, prefixed with the string, \"Uri: \". Declaration public override string ToString() Returns Type Description System.String Operators Implicit(UriMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (UriMediaSource uri) Parameters Type Name Description UriMediaSource uri Returns Type Description System.String Implicit(Uri to UriMediaSource) Allows implicit casting from a Uri. Declaration public static implicit operator UriMediaSource(Uri uri) Parameters Type Name Description Uri uri Returns Type Description UriMediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html",
    "title": "Interface IOverlayOutput",
    "keywords": "Interface IOverlayOutput Interface for defining the overlay type of output. Inherited Members IVideoOutput.MediaView IVideoOutput.Controller IVideoOutput.OuputType Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IOverlayOutput : IVideoOutput Properties OverlayArea Declaration Rectangle OverlayArea { get; } Property Value Type Description Rectangle Events AreaUpdated Declaration event EventHandler AreaUpdated Event Type Type Description EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html": {
    "href": "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html",
    "title": "Class EmbeddingControls",
    "keywords": "Class EmbeddingControls A built-in media controls. Inheritance System.Object EmbeddingControls Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class EmbeddingControls : ContentView Constructors EmbeddingControls() Internal use only, initializes a new instance of the EmbeddingControls. Declaration public EmbeddingControls() Methods OnBindingContextChanged() Declaration protected override void OnBindingContextChanged()"
  },
  "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html",
    "title": "Interface IPlatformMediaPlayer",
    "keywords": "Interface IPlatformMediaPlayer For internal use by platform renderers. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IPlatformMediaPlayer Properties AspectMode Declaration DisplayAspectMode AspectMode { get; set; } Property Value Type Description DisplayAspectMode AutoPlay Declaration bool AutoPlay { get; set; } Property Value Type Description System.Boolean AutoStop Declaration bool AutoStop { get; set; } Property Value Type Description System.Boolean Duration Declaration int Duration { get; } Property Value Type Description System.Int32 IsMuted Declaration bool IsMuted { get; set; } Property Value Type Description System.Boolean Position Declaration int Position { get; } Property Value Type Description System.Int32 UsesEmbeddingControls Declaration bool UsesEmbeddingControls { get; set; } Property Value Type Description System.Boolean Volume Declaration double Volume { get; set; } Property Value Type Description System.Double Methods GetAlbumArts() Declaration Task<Stream> GetAlbumArts() Returns Type Description Task < Stream > GetMetadata() Declaration Task<IDictionary<string, string>> GetMetadata() Returns Type Description Task < IDictionary < System.String , System.String >> Pause() Declaration void Pause() Seek(Int32) Declaration Task<int> Seek(int ms) Parameters Type Name Description System.Int32 ms Returns Type Description Task < System.Int32 > SetDisplay(IVideoOutput) Declaration void SetDisplay(IVideoOutput output) Parameters Type Name Description IVideoOutput output SetSource(MediaSource) Declaration void SetSource(MediaSource source) Parameters Type Name Description MediaSource source Start() Declaration Task<bool> Start() Returns Type Description Task < System.Boolean > Stop() Declaration void Stop() Events BufferingProgressUpdated Declaration event EventHandler<BufferingProgressUpdatedEventArgs> BufferingProgressUpdated Event Type Type Description EventHandler < BufferingProgressUpdatedEventArgs > PlaybackCompleted Declaration event EventHandler PlaybackCompleted Event Type Type Description EventHandler PlaybackPaused Declaration event EventHandler PlaybackPaused Event Type Type Description EventHandler PlaybackStarted Declaration event EventHandler PlaybackStarted Event Type Type Description EventHandler PlaybackStopped Declaration event EventHandler PlaybackStopped Event Type Type Description EventHandler UpdateStreamInfo Declaration event EventHandler UpdateStreamInfo Event Type Type Description EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html",
    "title": "Class RemoteKeyHandler",
    "keywords": "Class RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. Inheritance System.Object RemoteKeyHandler Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteKeyHandler : BindableObject Constructors RemoteKeyHandler() Initializes a new instance of the RemoteKeyHandler class. Declaration public RemoteKeyHandler() RemoteKeyHandler(Action<RemoteControlKeyEventArgs>) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action) Parameters Type Name Description Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event is activated. RemoteKeyHandler(Action<RemoteControlKeyEventArgs>, RemoteControlKeyTypes) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command and key type. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action, RemoteControlKeyTypes keyType) Parameters Type Name Description Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event with the specifiec key type is invoked. RemoteControlKeyTypes keyType A key type to invoke the action. Fields CommandProperty Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty Properties Command Gets or sets a command that invokes when the remote control key event is emitted. Declaration public ICommand Command { get; set; } Property Value Type Description ICommand Methods SendKeyEvent(RemoteControlKeyEventArgs) Declaration public void SendKeyEvent(RemoteControlKeyEventArgs args) Parameters Type Name Description RemoteControlKeyEventArgs args Events KeyDown Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyDown Event Type Type Description EventHandler < RemoteControlKeyEventArgs > KeyUp Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyUp Event Type Type Description EventHandler < RemoteControlKeyEventArgs >"
  },
  "api/Tizen.TV.UIControls.Forms.PlaybackState.html": {
    "href": "api/Tizen.TV.UIControls.Forms.PlaybackState.html",
    "title": "Enum PlaybackState",
    "keywords": "Enum PlaybackState Enumerates values that define the playback state of the media content. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum PlaybackState : int Fields Name Description Paused Paused while playing media. Playing Playing. Stopped Stopped."
  },
  "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html",
    "title": "Class OverlayMediaView",
    "keywords": "Class OverlayMediaView An overlay MediaView. Inheritance System.Object MediaView OverlayMediaView Implements IOverlayOutput IVideoOutput Inherited Members MediaView.PlayerProperty MediaView.Player MediaView.IVideoOutput.MediaView MediaView.IVideoOutput.Controller MediaView.LayoutChildren(Double, Double, Double, Double) MediaView.OnMeasure(Double, Double) MediaView.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayMediaView : MediaView, IOverlayOutput, IVideoOutput Constructors OverlayMediaView() Initializes a new instance of the OverlayMediaView class. Declaration public OverlayMediaView() Fields OverlayAreaProperty Identifies the OverlayArea bindable property. Declaration public static readonly BindableProperty OverlayAreaProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public override VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType Overrides MediaView.OuputType OverlayArea Gets the overlay area. Declaration public Rectangle OverlayArea { get; } Property Value Type Description Rectangle Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Events AreaUpdated Occurs when the overlay area is updated. Declaration public event EventHandler AreaUpdated Event Type Type Description EventHandler Implements IOverlayOutput IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html",
    "title": "Class RemoteControlKeyEventArgs",
    "keywords": "Class RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. Inheritance System.Object RemoteControlKeyEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteControlKeyEventArgs : EventArgs Constructors RemoteControlKeyEventArgs(VisualElement, RemoteControlKeyTypes, RemoteControlKeyNames, String) Declaration public RemoteControlKeyEventArgs(VisualElement sender, RemoteControlKeyTypes keyType, RemoteControlKeyNames keyName, string platformKeyName) Parameters Type Name Description VisualElement sender RemoteControlKeyTypes keyType RemoteControlKeyNames keyName System.String platformKeyName Properties Handled Gets or sets a value that indicates whether the remote control key event has already been handled. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean KeyName The name of a remote control key. Declaration public RemoteControlKeyNames KeyName { get; } Property Value Type Description RemoteControlKeyNames KeyType The type of a remote control key. Declaration public RemoteControlKeyTypes KeyType { get; } Property Value Type Description RemoteControlKeyTypes PlatformKeyName The name of a platform key name. Declaration public string PlatformKeyName { get; } Property Value Type Description System.String Sender The sender of a remote control key. Declaration public VisualElement Sender { get; } Property Value Type Description VisualElement"
  },
  "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html",
    "title": "Class MediaSourceConverter",
    "keywords": "Class MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. Inheritance System.Object MediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class MediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Returns a media source created from a URI that is contained in value. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.IVideoOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IVideoOutput.html",
    "title": "Interface IVideoOutput",
    "keywords": "Interface IVideoOutput Interface indicating the ouput type of the media. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IVideoOutput Properties Controller Declaration View Controller { get; set; } Property Value Type Description View MediaView Declaration VisualElement MediaView { get; } Property Value Type Description VisualElement OuputType Declaration VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType"
  },
  "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html",
    "title": "Enum DisplayAspectMode",
    "keywords": "Enum DisplayAspectMode Enumerates values that define how a media content is displayed. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DisplayAspectMode : int Fields Name Description AspectFill Scale the media content to fill the view. AspectFit Scale the media content to fit the view. Fill Scale the media content to so it exactly fills the view. OrignalSize The original size of the media content."
  },
  "api/Tizen.TV.UIControls.Forms.ProgressToBoundTextConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ProgressToBoundTextConverter.html",
    "title": "Class ProgressToBoundTextConverter",
    "keywords": "Class ProgressToBoundTextConverter Class that the XAML parser uses to convert Progress to Bound. Inheritance System.Object ProgressToBoundTextConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ProgressToBoundTextConverter : IValueConverter Methods Convert(Object, Type, Object, CultureInfo) Declaration public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description System.Object value Type targetType System.Object parameter CultureInfo culture Returns Type Description System.Object ConvertBack(Object, Type, Object, CultureInfo) Declaration public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description System.Object value Type targetType System.Object parameter CultureInfo culture Returns Type Description System.Object"
  },
  "api/Tizen.TV.UIControls.Forms.MediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSource.html",
    "title": "Class MediaSource",
    "keywords": "Class MediaSource Abstract class whose implementors load media contents from files or the Web. Inheritance System.Object MediaSource FileMediaSource UriMediaSource Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public abstract class MediaSource : Element Constructors MediaSource() Declaration protected MediaSource() Methods FromFile(String) Returns a new MediaSource that reads from file. Declaration public static MediaSource FromFile(string file) Parameters Type Name Description System.String file The file path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. FromUri(Uri) Returns a new MediaSource that reads from uri. Declaration public static MediaSource FromUri(Uri uri) Parameters Type Name Description Uri uri The uri path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. OnSourceChanged() Declaration protected void OnSourceChanged() Operators Implicit(String to MediaSource) Declaration public static implicit operator MediaSource(string source) Parameters Type Name Description System.String source Returns Type Description MediaSource Implicit(Uri to MediaSource) Declaration public static implicit operator MediaSource(Uri uri) Parameters Type Name Description Uri uri Returns Type Description MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html",
    "title": "Enum RemoteControlKeyTypes",
    "keywords": "Enum RemoteControlKeyTypes Enumeration that specifies the remote control key types. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RemoteControlKeyTypes : int Fields Name Description KeyDown The Key down event type. KeyUp The Key up event type."
  },
  "api/Tizen.TV.UIControls.Forms.MillisecondToTextConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MillisecondToTextConverter.html",
    "title": "Class MillisecondToTextConverter",
    "keywords": "Class MillisecondToTextConverter Class that the XAML parser uses to convert milliseconds to Text format. Inheritance System.Object MillisecondToTextConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class MillisecondToTextConverter : IValueConverter Methods Convert(Object, Type, Object, CultureInfo) Declaration public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description System.Object value Type targetType System.Object parameter CultureInfo culture Returns Type Description System.Object ConvertBack(Object, Type, Object, CultureInfo) Declaration public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description System.Object value Type targetType System.Object parameter CultureInfo culture Returns Type Description System.Object"
  },
  "api/Tizen.TV.UIControls.Forms.VideoOuputType.html": {
    "href": "api/Tizen.TV.UIControls.Forms.VideoOuputType.html",
    "title": "Enum VideoOuputType",
    "keywords": "Enum VideoOuputType Enumeration that specifies the video ouput. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum VideoOuputType : int Fields Name Description Buffer A buffer type. Overlay An overlay type."
  },
  "api/Tizen.TV.UIControls.Forms.OverlayPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayPage.html",
    "title": "Class OverlayPage",
    "keywords": "Class OverlayPage The OverlayPage class is used to display the video output on a page. Inheritance System.Object OverlayPage Implements IOverlayOutput IVideoOutput Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayPage : ContentPage, IOverlayOutput, IVideoOutput Constructors OverlayPage() Initializes a new instance of the OverlayPage class. Declaration public OverlayPage() Fields OverlayAreaProperty Identifies the OverlayArea bindable property. Declaration public static readonly BindableProperty OverlayAreaProperty Field Value Type Description BindableProperty PlayerProperty Identifies the Player bindable property. Declaration public static readonly BindableProperty PlayerProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType OverlayArea Gets or sets the overlay area. Declaration public Rectangle OverlayArea { get; set; } Property Value Type Description Rectangle Player Gets or sets the media player. Declaration public MediaPlayer Player { get; set; } Property Value Type Description MediaPlayer Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Events AreaUpdated Occurs when the overlay area is updated. Declaration public event EventHandler AreaUpdated Event Type Type Description EventHandler Explicit Interface Implementations IVideoOutput.Controller Declaration View IVideoOutput.Controller { get; set; } Returns Type Description View IVideoOutput.MediaView Declaration VisualElement IVideoOutput.MediaView { get; } Returns Type Description VisualElement Implements IOverlayOutput IVideoOutput"
  }
}